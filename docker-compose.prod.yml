version: "3"

networks: # 自定义网络(默认桥接), 不使用links通信
  nginx_network:
    driver: bridge
  mysql_network:
    driver: bridge
  redis_network:
    driver: bridge

services:
  redis:
    image: redis:6.2.7
    networks:
      - redis_network
    expose:
      - "6379"
    restart: always

  mysql:
    image: mysql:8.0.27
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_DATABASE: "fa_demo"
    networks:
      - mysql_network
    volumes:
      - ./deploy/mysql:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    expose:
      - "3306"
    restart: always
    command:
      - "mysqld"
      - "--default-authentication-plugin=mysql_native_password"
      - "--bind-address=0.0.0.0"
      - "--mysqlx-bind-address=0.0.0.0"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"


  nginx:
    image: nginx:1.18.0
    ports:
      - "33333:80" # 前一个是宿主机端口，可以远程，后一个是容器内端口，只是容器之间使用的
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/conf.d/default.conf # 挂载nginx配置文件
      - ./static:/usr/share/nginx/html/static # 挂载静态文件
      - ./media:/usr/share/nginx/html/media # 挂载用户上传媒体文件
      - ./dist:/usr/share/nginx/html/dist # 前端打包好的文件
    networks:
      - nginx_network
    depends_on:
      - fastapi
    restart: always

  fastapi:
    build:
      context: .
      dockerfile: ./deploy/python/Dockerfile
    expose:
      - "8000"
    environment:
      PROJECT_ENV: "prod"
    env_file:
      - .env.prod
    networks:
      - nginx_network
      - mysql_network
      - redis_network
    depends_on:
      - mysql
      - redis
    restart: always
    tty: true
    stdin_open: true